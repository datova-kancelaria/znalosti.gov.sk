<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>sk.gov.knowledgegraph</groupId>
	<artifactId>sk-gov-knowledgegraph</artifactId>
	<name>SKKnowledgeGraph</name>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<properties>
		<java.version>17</java.version>
		<vaadin.version>23.1.1</vaadin.version>
		<rdf4j.version>4.0.0</rdf4j.version>
	</properties>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.1</version>
	</parent>

	<repositories>
		<repository>
			<id>Vaadin Directory</id>
			<url>https://maven.vaadin.com/vaadin-addons</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>


	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.eclipse.rdf4j</groupId>
				<artifactId>rdf4j-client</artifactId>
				<version>${rdf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.rdf4j</groupId>
				<artifactId>rdf4j-spring</artifactId>
				<version>${rdf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.rdf4j</groupId>
				<artifactId>spring-boot-sparql-web</artifactId>
				<version>${rdf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.rdf4j</groupId>
				<artifactId>rdf4j-storage</artifactId>
				<version>${rdf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.rdf4j</groupId>
				<artifactId>rdf4j-sail-memory</artifactId>
				<version>${rdf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.rdf4j</groupId>
				<artifactId>rdf4j-queryresultio</artifactId>
				<version>${rdf4j.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-rio-rdfxml</artifactId>
			<version>${rdf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-rio-jsonld</artifactId>
			<version>${rdf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-rio-turtle</artifactId>
			<version>${rdf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-rio-api</artifactId>
			<version>${rdf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-queryresultio-sparqlxml</artifactId>
			<version>${rdf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-queryresultio-text</artifactId>
			<version>${rdf4j.version}</version>
		</dependency>


		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-repository-manager</artifactId>
			<version>${rdf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-repository-sail</artifactId>
			<version>${rdf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-repository-http</artifactId>
			<version>${rdf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

	</dependencies>

	<build>
		<defaultGoal>spring-boot:run</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!-- Clean build and startup time for Vaadin apps sometimes may exceed the default Spring Boot's 30sec timeout. -->
				<configuration>
					<wait>500</wait>
					<maxAttempts>240</maxAttempts>
				</configuration>
			</plugin>


			<!-- Take care of synchronizing java dependencies and imports in package.json and main.js files. It also creates webpack.config.js if not exists yet. -->
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-frontend</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<!-- Production mode is activated using -Pproduction -->
			<id>production</id>
			<properties>
				<vaadin.productionMode>true</vaadin.productionMode>
			</properties>
			<dependencies>
					<dependency>
						<groupId>com.vaadin</groupId>
						<artifactId>vaadin-core</artifactId>
						<exclusions>
							<exclusion>
								<groupId>com.vaadin</groupId>
								<artifactId>vaadin-dev-server</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
				</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>com.vaadin</groupId>
						<artifactId>vaadin-maven-plugin</artifactId>
						<version>${vaadin.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>build-frontend</goal>
								</goals>
								<phase>compile</phase>
							</execution>
						</executions>
						<configuration>
							<productionMode>true</productionMode>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<!-- Clean build and startup time for Vaadin apps sometimes may exceed the default Spring Boot's 30sec timeout. -->
						<configuration>
							<wait>500</wait>
							<maxAttempts>240</maxAttempts>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>repackage</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.33.0</version>
						<configuration>
							<!-- <pushRegistry>docker.datalab.digital</pushRegistry> -->
							<images>
								<image>
									<name>docker.datalab.digital/semweb/znalosti:${project.version}</name>
									<build>
										<dockerFileDir>.</dockerFileDir>
										<assembly>
											<descriptor>assembly.xml</descriptor>
										</assembly>
									</build>
								</image>
							</images>
							<verbose>true</verbose>
							<removeAll>true</removeAll>
						</configuration>
						<executions>
							<execution>
								<id>docker:build</id>
								<phase>install</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
							<execution>
								<id>docker:push</id>
								<phase>deploy</phase>
								<goals>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>